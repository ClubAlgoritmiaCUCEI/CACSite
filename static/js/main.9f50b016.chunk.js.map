{"version":3,"sources":["Components/header/index.js","Components/footer/index.js","Components/button/index.js","firebase.js","Providers/userProvider.js","Components/login/index.js","Components/user_side/index.js","Components/side/index.js","Views/home/index.js","Views/profile/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","Button","props","onClick","children","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","createUserProfileDocument","user","aditionalData","a","async","userRef","doc","uid","get","exists","displayName","email","photoURL","set","console","error","mesage","getUserDocument","userDocument","data","UserContext","createContext","UserProvider","useState","isLoading","setUser","useEffect","onAuthStateChanged","userAuth","logged","Provider","value","Login","useContext","log","signOut","signInWithRedirect","UserSide","src","alt","Side","Home","Profile","match","params","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f50b016.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Header = () =>{\r\n    return (\r\n        <div className=\"cac_header\">\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Footer = () =>{\r\n    return(\r\n        <div className=\"cac_footer\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\n\r\nimport './style.css'\r\n\r\nconst Button = (props) =>{\r\n    const {onClick, children, className} = props;\r\n    return (\r\n        <div className={`cac_button ${className}`} onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCGuTMhZblWZXxX_5HLcgpOrFVB7GD6OPI\",\r\n    authDomain: \"cacsite-d2389.firebaseapp.com\",\r\n    databaseURL: \"https://cacsite-d2389.firebaseio.com\",\r\n    projectId: \"cacsite-d2389\",\r\n    storageBucket: \"cacsite-d2389.appspot.com\",\r\n    messagingSenderId: \"955823965171\",\r\n    appId: \"1:955823965171:web:40f5d9fa10fc6ca4960886\",\r\n    measurementId: \"G-2EZ3Z62XX5\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\r\nexport const signOut = () => auth.signOut();\r\n\r\n\r\n// export const publishPost = async (user, post) => {\r\n//     const data = {\r\n//         auth: user,\r\n//         timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n//         content: post.content,\r\n//         comments: [],\r\n//         key: Date.now()\r\n//     }\r\n//     return await firestore.collection('posts').add(data);\r\n\r\n// }\r\n\r\nexport const createUserProfileDocument = async (user, aditionalData) => {\r\n    if (!user) return;\r\n\r\n    //Get a reference to the place in the database where a user profile might be\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n\r\n    // Go and fetch the documentfrom that location \r\n    const snapshot = await userRef.get();\r\n\r\n    if (!snapshot.exists) {\r\n        const { displayName, email, photoURL } = user;\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                photoURL,\r\n                email,\r\n                ...aditionalData\r\n            })\r\n\r\n        } catch (err) {\r\n            console.error('Error creating user', err.mesage);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid)\r\n}\r\n\r\n\r\nexport const getUserDocument = async (uid) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return { uid, ...userDocument.data() };\r\n    } catch (err) {\r\n        console.error('Error feching user', err.mesage);\r\n    }\r\n}","import React, { createContext, useEffect, useState } from 'react';\r\nimport { auth, createUserProfileDocument } from '../firebase.js';\r\n\r\nexport const UserContext = createContext({});\r\n\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState({ isLoading: true });\r\n    useEffect(() => {\r\n        const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n\r\n            if (userAuth != null) {\r\n                setUser({ isLoading: true, logged: true });\r\n                const userDocument = await createUserProfileDocument(userAuth);\r\n                setUser({ ...userDocument, isLoading: false, logged: true });\r\n            } else {\r\n                setUser({ isLoading: false, logged: false });\r\n            }\r\n\r\n        })\r\n        return unsubscribeFromAuth;\r\n    }, []);\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\nexport default UserProvider","import React, { useContext } from 'react';\r\nimport Button from '../button'\r\n\r\nimport { signInWithGoogle, signOut } from '../../firebase'\r\n\r\nimport { UserContext } from '../../Providers/userProvider';\r\n\r\nimport './style.css'\r\n\r\nconst Login = () => {\r\n    const user = useContext(UserContext);\r\n    console.log(user);\r\n    return (\r\n        <>\r\n            {!user.isLoading ? (\r\n                <div className=\"cac_login\">\r\n                    {user.logged ? (\r\n                        <div className=\"cac_logged\">\r\n                            <Button onClick={() => signOut()} >Sign Out</Button>\r\n                        </div>\r\n                    ) : (\r\n                            <div className={\"cac_login_buttons\"}>\r\n                                <Button onClick={() => signInWithGoogle()} className=\"login_button button button_outline\"><span>Log in</span></Button>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst UserSide = ({ user }) => {\r\n    console.log(user);\r\n    return (\r\n        <div className=\"cac_user-side\">\r\n            <img src={user.photoURL} alt=\"profile-pic\" className=\"cac_user-side_photo\" />\r\n            <div className=\"cac_user-side_info\">\r\n                <p className=\"cac_user-side_name\">{user.displayName}<br /> </p>\r\n                <p className=\"cac_user-side_mail\">{user.email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSide;","import React, { useContext } from 'react'\r\n\r\nimport { UserContext } from '../../Providers/userProvider';\r\n\r\nimport './style.css'\r\nimport UserSide from '../user_side';\r\n\r\nconst Side = ({ className }) => {\r\n    const user = useContext(UserContext);\r\n    // console.log(user);\r\n\r\n    return (\r\n        <div className={`cac_side ${className}`}>\r\n            {!user.isLoading && user.logged ? <UserSide user={user} /> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Side;","import React from 'react'\r\nimport Button from '../../Components/button'\r\nimport Login from '../../Components/login'\r\nimport Side from '../../Components/side'\r\n\r\nimport './style.css'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"cac_home\">\r\n            <Side className=\"cac_home_side\" />\r\n            <Login />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Profile = ({match}) =>{\r\n    console.log(match);\r\n    const {uid} = match.params;\r\n    console.log(uid);\r\n    return (\r\n        <div className=\"cac_profile\">\r\n            {uid ? uid : \"pagina personal :)\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from './Components/header'\r\nimport Footer from './Components/footer'\r\n\r\nimport Home from './Views/home'\r\nimport Profile from './Views/profile'\r\n\r\nimport UserProvider from './Providers/userProvider';\r\n\r\nimport './App.css';\r\nfunction App() {\r\n  return (\r\n    <UserProvider>\r\n      <Header />\r\n      <div className=\"cac\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact={true} path={'/'} render={({ match }) => <Home match={match} />} />\r\n            <Route exact={true} path={'/home'} render={({ match }) => <Home match={match} />} />\r\n            <Route exact={true} path={'/profile'} render={({ match }) => <Profile match={match} />} />\r\n            <Route exact={true} path={'/profile/:uid'} render={({ match }) => <Profile match={match} />} />\r\n            <Route render={({ match }) => (<div>Pagina no encontrada :$</div>)} />\r\n            <Home />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n\r\n      <Footer />\r\n    </UserProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}