{"version":3,"sources":["Views/attendanceCode/index.js","Components/popup/index.js"],"names":["AttendanceCode","atnContext","useContext","AttendanceContext","useState","classData","code","setCode","showPopup","setShowPopup","isPopoupClosing","setIsPopupClosing","popupClassname","setPopupClassname","classes","ClassContext","fetchPreviousClasses","fetchNextClasses","useEffect","validCode","fetching","className","isDataAvailable","to","onClick","setTimeout","onSubmit","e","a","async","preventDefault","setClassData","c","htmlFor","type","name","id","required","value","onChange","target","nextClasses","map","i","key","title","date","toDate","toDateString","description","attendances","length","previousClasses","Popup","children","TopPopup","timeOut","clearTimeout"],"mappings":"oOAgIeA,UApHQ,WACrB,IAAMC,EAAaC,qBAAWC,KADH,EAEHC,mBAASH,EAAWI,UAAUC,MAF3B,mBAEpBA,EAFoB,KAEdC,EAFc,OAGOH,oBAAS,GAHhB,mBAGpBI,EAHoB,KAGTC,EAHS,OAIkBL,oBAAS,GAJ3B,mBAIpBM,EAJoB,KAIHC,EAJG,OAKiBP,mBAAS,IAL1B,mBAKpBQ,EALoB,KAKJC,EALI,KAOrBC,EAAUZ,qBAAWa,KAE3BD,EAAQE,uBACRF,EAAQG,mBAaRC,qBAAU,WAELjB,EAAWI,UAAUc,YACtBb,GACCL,EAAWI,UAAUe,UAEtBX,GAAa,KAGd,CAACR,EAAWI,UAAUc,UAAWlB,EAAWI,UAAUe,WAazD,OACE,yBAAKC,UAAU,+CACZpB,EAAWI,UAAUiB,iBACpB,kBAAC,IAAD,CAAUC,GAAE,sBAAiBjB,KAE9BE,GACC,kBAAC,IAAD,CAAUa,UAAS,UAAKT,EAAL,UAA6BY,QAjBnC,WACZd,IACHC,GAAkB,GAClBE,EAAkB,SAClBY,YAAW,WACThB,GAAa,GACbI,EAAkB,IAClBF,GAAkB,KACjB,QASD,cAIF,0BAAMU,UAAU,sBAAsBK,SAvCrB,SAAMC,GAAN,SAAAC,EAAAC,OAAA,gDACnBF,EAAEG,iBACG7B,EAAWmB,UACdnB,EAAW8B,cAAa,SAAAC,GAAC,sBAAUA,EAAV,CAAa1B,KAAMA,OAH3B,uCAwCf,2BAAO2B,QAAQ,OAAOZ,UAAU,wBAAhC,cAGA,2BACEa,KAAK,OACLC,KAAK,OACLC,GAAG,OACHf,UAAS,mCACPpB,EAAWI,UAAUc,UACjB,GACA,qCAENkB,UAAQ,EACRC,MAAOhC,EACPiC,SA1DiB,SAAAZ,GACvBpB,EAAQoB,EAAEa,OAAOF,UA2Db,kBAAC,IAAD,CAAYjB,UAAU,+BAAtB,aAIF,yBAAKA,UAAU,2DACb,0BAAMA,UAAU,gCAAhB,gBACCP,EAAQ2B,YAAYC,KAAI,SAACV,EAAGW,GAAJ,OACvB,yBAAKC,IAAKD,EAAGtB,UAAU,4BACrB,0BAAMA,UAAU,8BAA8BW,EAAEa,OAChD,0BAAMxB,UAAU,6BACbW,EAAEc,KAAKC,SAASC,gBAEnB,0BAAM3B,UAAU,+BAA+BW,EAAE1B,MACjD,uBAAGe,UAAU,sCACVW,EAAEiB,aAEL,0BAAM5B,UAAU,kCACbW,EAAEkB,YAAYC,OADjB,oBAMN,yBAAK9B,UAAU,2DACb,0BAAMA,UAAU,gCAAhB,oBACCP,EAAQsC,gBAAgBV,KAAI,SAACV,EAAGW,GAAJ,OAC3B,yBAAKC,IAAKD,EAAGtB,UAAU,4BACrB,0BAAMA,UAAU,8BAA8BW,EAAEa,OAChD,0BAAMxB,UAAU,6BACbW,EAAEc,KAAKC,SAASC,gBAEnB,0BAAM3B,UAAU,+BAA+BW,EAAE1B,MACjD,uBAAGe,UAAU,sCACVW,EAAEiB,aAEL,0BAAM5B,UAAU,kCACbW,EAAEkB,YAAYC,OADjB,uB,gCCtHZ,4DAQeE,IAJD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OAAO,yBAAKjC,UAAU,aAAaiC,IAKrC,IAAMC,EAAW,SAAC,GAA6D,IAA3DD,EAA0D,EAA1DA,SAA0D,IAAhDjC,iBAAgD,MAApC,QAAoC,MAA3BG,eAA2B,MAAjB,kBAAM,MAAW,EAQ5E,OAPAN,qBAAU,WACR,IAAMsC,EAAU/B,YAAW,WACzBD,MACC,KACH,OAAO,kBAAMiC,aAAaD,OAI1B,yBACEhC,QAASA,EACTH,UAAS,wBAAmBA,GAAwB,KAEnDiC,K","file":"static/js/11.ddff7ed6.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n\r\nimport { FormButton } from \"../../Components/button\";\r\nimport { TopPopup } from \"../../Components/popup\";\r\n\r\nimport { AttendanceContext } from \"../../Providers/attendanceProvider\";\r\nimport { ClassContext } from \"../../Providers/classProvider\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst AttendanceCode = () => {\r\n  const atnContext = useContext(AttendanceContext);\r\n  const [code, setCode] = useState(atnContext.classData.code);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isPopoupClosing, setIsPopupClosing] = useState(false);\r\n  const [popupClassname, setPopupClassname] = useState(\"\");\r\n\r\n  const classes = useContext(ClassContext);\r\n\r\n  classes.fetchPreviousClasses();\r\n  classes.fetchNextClasses();\r\n\r\n  const handleTextChange = e => {\r\n    setCode(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!atnContext.fetching) {\r\n      atnContext.setClassData(c => ({ ...c, code: code }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !atnContext.classData.validCode &&\r\n      code &&\r\n      !atnContext.classData.fetching\r\n    ) {\r\n      setShowPopup(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [atnContext.classData.validCode, atnContext.classData.fetching]);\r\n\r\n  const closePopup = () => {\r\n    if (!isPopoupClosing) {\r\n      setIsPopupClosing(true);\r\n      setPopupClassname(\"close\");\r\n      setTimeout(() => {\r\n        setShowPopup(false);\r\n        setPopupClassname(\"\");\r\n        setIsPopupClosing(false);\r\n      }, 300);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"cac_attendance cac_attendance--not-in-class\">\r\n      {atnContext.classData.isDataAvailable && (\r\n        <Redirect to={`/attendance/${code}`} />\r\n      )}\r\n      {showPopup && (\r\n        <TopPopup className={`${popupClassname} error`} onClick={closePopup}>\r\n          Wrong Code\r\n        </TopPopup>\r\n      )}\r\n      <form className=\"cac_attendance_form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"code\" className=\"cac_attendance_label\">\r\n          Enter Code\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"code\"\r\n          id=\"code\"\r\n          className={`cac_attendance_text-area ${\r\n            atnContext.classData.validCode\r\n              ? \"\"\r\n              : \"cac_attendance_text-area--invalid\"\r\n          }`}\r\n          required\r\n          value={code}\r\n          onChange={handleTextChange}\r\n        />\r\n        <FormButton className=\"cac_attendance_form_button \">\r\n          Continue\r\n        </FormButton>\r\n      </form>\r\n      <div className=\"cac_attendance_classes cac_attendance_classes--previous\">\r\n        <span className=\"cac_attendance_classes_title\">Next classes</span>\r\n        {classes.nextClasses.map((c, i) => (\r\n          <div key={i} className=\"cac_attendance_class-box\">\r\n            <span className=\"cac_attendance_class_title\">{c.title}</span>\r\n            <span className=\"cac_attendance_class_date\">\r\n              {c.date.toDate().toDateString()}\r\n            </span>\r\n            <span className=\"cac_attendance_classes_code\">{c.code}</span>\r\n            <p className=\"cac_attendance_classes_description\">\r\n              {c.description}\r\n            </p>\r\n            <span className=\"cac_attendance_classes_counter\">\r\n              {c.attendances.length} attendants\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"cac_attendance_classes cac_attendance_classes--previous\">\r\n        <span className=\"cac_attendance_classes_title\">Previous classes</span>\r\n        {classes.previousClasses.map((c, i) => (\r\n          <div key={i} className=\"cac_attendance_class-box\">\r\n            <span className=\"cac_attendance_class_title\">{c.title}</span>\r\n            <span className=\"cac_attendance_class_date\">\r\n              {c.date.toDate().toDateString()}\r\n            </span>\r\n            <span className=\"cac_attendance_classes_code\">{c.code}</span>\r\n            <p className=\"cac_attendance_classes_description\">\r\n              {c.description}\r\n            </p>\r\n            <span className=\"cac_attendance_classes_counter\">\r\n              {c.attendances.length} attendants\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceCode;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Popup = ({ children }) => {\r\n  return <div className=\"cac_popup\">{children}</div>;\r\n};\r\n\r\nexport default Popup;\r\n\r\nconst TopPopup = ({ children, className = \"error\", onClick = () => null }) => {\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      onClick();\r\n    }, 5000);\r\n    return () => clearTimeout(timeOut);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`cac_popup-top ${className ? className : \"\"}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TopPopup };\r\n"],"sourceRoot":""}