{"version":3,"sources":["Components/header/index.js","Components/footer/index.js","firebase.js","Providers/userProvider.js","Components/user_side/index.js","Components/side/index.js","Components/button/index.js","Components/login/index.js","Components/navigation/index.js","Views/home/index.js","Views/profile/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Footer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","createUserProfileDocument","user","aditionalData","a","async","userRef","doc","uid","get","exists","displayName","email","photoURL","set","console","error","mesage","getUserDocument","userDocument","data","UserContext","createContext","UserProvider","children","useState","isLoading","setUser","useEffect","onAuthStateChanged","userAuth","logged","Provider","value","UserSide","log","src","alt","Side","useContext","Button","props","onClick","Login","signOut","signInWithRedirect","Navigation","selection","class","href","Home","Profile","match","params","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.570d65f3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./style.css\";\n\nconst Header = () => {\n  return <div className=\"cac_header\"></div>;\n};\nexport default Header;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Footer = () => {\n  return <div className=\"cac_footer\"></div>;\n};\n\nexport default Footer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGuTMhZblWZXxX_5HLcgpOrFVB7GD6OPI\",\n  authDomain: \"cacsite-d2389.firebaseapp.com\",\n  databaseURL: \"https://cacsite-d2389.firebaseio.com\",\n  projectId: \"cacsite-d2389\",\n  storageBucket: \"cacsite-d2389.appspot.com\",\n  messagingSenderId: \"955823965171\",\n  appId: \"1:955823965171:web:40f5d9fa10fc6ca4960886\",\n  measurementId: \"G-2EZ3Z62XX5\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\n\nexport const auth = firebase.auth();\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => auth.signInWithRedirect(provider);\nexport const signOut = () => auth.signOut();\n\n// export const publishPost = async (user, post) => {\n//     const data = {\n//         auth: user,\n//         timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n//         content: post.content,\n//         comments: [],\n//         key: Date.now()\n//     }\n//     return await firestore.collection('posts').add(data);\n\n// }\n\nexport const createUserProfileDocument = async (user, aditionalData) => {\n  if (!user) return;\n\n  //Get a reference to the place in the database where a user profile might be\n  const userRef = firestore.doc(`users/${user.uid}`);\n\n  // Go and fetch the documentfrom that location\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        photoURL,\n        email,\n        ...aditionalData\n      });\n    } catch (err) {\n      console.error(\"Error creating user\", err.mesage);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nexport const getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return { uid, ...userDocument.data() };\n  } catch (err) {\n    console.error(\"Error feching user\", err.mesage);\n  }\n};\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { auth, createUserProfileDocument } from \"../firebase.js\";\n\nexport const UserContext = createContext({});\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState({ isLoading: true });\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth != null) {\n        setUser({ isLoading: true, logged: true });\n        const userDocument = await createUserProfileDocument(userAuth);\n        setUser({ ...userDocument, isLoading: false, logged: true });\n      } else {\n        setUser({ isLoading: false, logged: false });\n      }\n    });\n    return unsubscribeFromAuth;\n  }, []);\n  return <UserContext.Provider value={user}>{children}</UserContext.Provider>;\n};\nexport default UserProvider;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst UserSide = ({ user }) => {\n  console.log(user);\n  return (\n    <div className=\"cac_user-side\">\n      <img\n        src={user.photoURL}\n        alt=\"profile-pic\"\n        className=\"cac_user-side_photo\"\n      />\n      <div className=\"cac_user-side_info\">\n        <p className=\"cac_user-side_name\">\n          {user.displayName}\n          <br />{\" \"}\n        </p>\n        <p className=\"cac_user-side_mail\">{user.email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSide;\n","import React, { useContext } from \"react\";\n\nimport { UserContext } from \"../../Providers/userProvider\";\n\nimport \"./style.css\";\nimport UserSide from \"../user_side\";\n\nconst Side = ({ className }) => {\n  const user = useContext(UserContext);\n  // console.log(user);\n\n  return (\n    <div className={`cac_side ${className}`}>\n      {!user.isLoading && user.logged ? <UserSide user={user} /> : null}\n    </div>\n  );\n};\n\nexport default Side;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Button = props => {\n  const { onClick, children, className } = props;\n  return (\n    <div className={`cac_button ${className}`} onClick={onClick}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { useContext } from \"react\";\nimport Button from \"../button\";\n\nimport { signInWithGoogle, signOut } from \"../../firebase\";\n\nimport { UserContext } from \"../../Providers/userProvider\";\n\nimport \"./style.css\";\n\nconst Login = () => {\n  const user = useContext(UserContext);\n  console.log(user);\n  return (\n    <>\n      {!user.isLoading ? (\n        <div className=\"cac_login\">\n          {user.logged ? (\n            <div className=\"cac_logged\">\n              <Button onClick={() => signOut()}>Sign Out</Button>\n            </div>\n          ) : (\n            <div className={\"cac_login_buttons\"}>\n              <Button\n                onClick={() => signInWithGoogle()}\n                className=\"login_button button button_outline\"\n              >\n                <span>Log in</span>\n              </Button>\n            </div>\n          )}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"../../Components/login\";\nimport \"./style.css\";\n\nconst Navigation = props => {\n  const { className, selection } = props;\n  return (\n    <div className={`cac_navigation ${className}`}>\n      {selection === \"home\" ? (\n        <a class=\"active\" href=\"#home\">\n          Home\n        </a>\n      ) : (\n        <a href=\"#home\">Home</a>\n      )}\n      {selection === \"public\" ? (\n        <a class=\"active\" href=\"#public\">\n          Public\n        </a>\n      ) : (\n        <a href=\"#public\">Public</a>\n      )}\n      {selection === \"editorial\" ? (\n        <a class=\"active\" href=\"#editorial\">\n          Editorial\n        </a>\n      ) : (\n        <a href=\"#editorial\">Editorial</a>\n      )}\n      {selection === \"weeklyProblem\" ? (\n        <a class=\"active\" href=\"#weeklyProblem\">\n          Weekly Problem\n        </a>\n      ) : (\n        <a href=\"#weeklyProblem\">Weekly Problem</a>\n      )}\n      <div class=\"login\">\n        <Login />\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Side from \"../../Components/side\";\nimport Navigation from \"../../Components/navigation\";\n\nimport \"./style.css\";\n\nconst Home = () => {\n  return (\n    <>\n      <Navigation selection=\"home\" />\n      <div className=\"cac_home\">\n        <Side className=\"cac_home_side\" />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nconst Profile = ({ match }) => {\n  console.log(match);\n  const { uid } = match.params;\n  console.log(uid);\n  return <div className=\"cac_profile\">{uid ? uid : \"pagina personal :)\"}</div>;\n};\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./Components/header\";\nimport Footer from \"./Components/footer\";\n\nimport Home from \"./Views/home\";\nimport Profile from \"./Views/profile\";\n\nimport UserProvider from \"./Providers/userProvider\";\n\nimport \"./App.css\";\nfunction App() {\n  return (\n    <UserProvider>\n      <Header />\n      <div className=\"cac\">\n        <Router>\n          <Switch>\n            <Route\n              exact={true}\n              path={\"/\"}\n              render={({ match }) => <Home match={match} />}\n            />\n            <Route\n              exact={true}\n              path={\"/home\"}\n              render={({ match }) => <Home match={match} />}\n            />\n            <Route\n              exact={true}\n              path={\"/profile\"}\n              render={({ match }) => <Profile match={match} />}\n            />\n            <Route\n              exact={true}\n              path={\"/profile/:uid\"}\n              render={({ match }) => <Profile match={match} />}\n            />\n            <Route render={({ match }) => <div>Pagina no encontrada :$</div>} />\n            <Home />\n          </Switch>\n        </Router>\n      </div>\n\n      <Footer />\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}