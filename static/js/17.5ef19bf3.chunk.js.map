{"version":3,"sources":["Components/single-post/editorial-post/index.js"],"names":["EditorialPost","match","posts","useContext","PostsContext","user","UserContext","allUsers","AllUsersContext","useState","undefined","postData","setPostData","id","params","useEffect","fetch","editorial","destroyerFunction","status","post","find","p","a","async","postsRef","firestore","doc","onSnapshot","snapshot","data","e","console","error","fetchPost","isLoading","enableLink","showAuthor","usersMap","className","from","cropContent","showCommentaries"],"mappings":"8LA2DeA,UAlDO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBC,EAAQC,qBAAWC,KACnBC,EAAOF,qBAAWG,KAClBC,EAAWJ,qBAAWK,KAHO,EAIHC,wBAASC,GAJN,mBAI5BC,EAJ4B,KAIlBC,EAJkB,KAK3BC,EAAOZ,EAAMa,OAAbD,GA0BR,OAxBAE,qBAAU,WACRb,EAAMc,MAAMC,cACX,CAACf,EAAMc,QAEVD,qBAAU,WACR,IAAIG,EAAoB,kBAAM,MAW9B,GAAIhB,EAAMiB,OAAOF,UAAW,CAC1B,IAAMG,EAAOlB,EAAMA,MAAMe,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAET,KAAOA,KAClDO,EAAMR,EAAYQ,GAZN,mBAAAG,EAAAC,OAAA,gDACVC,EAAWC,IAAUC,IAAV,oBAA2Bd,IAC5C,IACEK,EAAoBO,EAASG,YAAW,SAAMC,GAAN,SAAAN,EAAAC,OAAA,gDACtCZ,EAAY,aAAEC,GAAIgB,EAAShB,IAAOgB,EAASC,SADL,wCAGxC,MAAOC,GACPC,QAAQC,MAAMF,GAPA,qCAaXG,GAEP,OAAOhB,IACN,CAACL,EAAIX,IAGN,oCACGS,IAAaN,EAAK8B,WACjB,kBAAC,IAAD,CACEC,YAAY,EACZC,YAAY,EACZ9B,SAAUA,EAAS+B,SACnBC,UAAU,gBACVT,KAAMnB,EACN6B,KAAK,YACLC,aAAa,EACbC,kBAAkB,EAClBrC,KAAMA","file":"static/js/17.5ef19bf3.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { firestore } from \"../../../firebase\";\r\n\r\nimport { PostsContext } from \"../../../Providers/postsProvider\";\r\nimport { UserContext, AllUsersContext } from \"../../../Providers/userProvider\";\r\n\r\nimport Post from \"../../post\";\r\n\r\nconst EditorialPost = ({ match }) => {\r\n  const posts = useContext(PostsContext);\r\n  const user = useContext(UserContext);\r\n  const allUsers = useContext(AllUsersContext);\r\n  const [postData, setPostData] = useState(undefined);\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    posts.fetch.editorial();\r\n  }, [posts.fetch]);\r\n\r\n  useEffect(() => {\r\n    let destroyerFunction = () => null;\r\n    const fetchPost = async () => {\r\n      const postsRef = firestore.doc(`editorial/${id}`);\r\n      try {\r\n        destroyerFunction = postsRef.onSnapshot(async snapshot => {\r\n          setPostData({ id: snapshot.id, ...snapshot.data() });\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    if (posts.status.editorial) {\r\n      const post = posts.posts.editorial.find(p => p.id === id);\r\n      if (post) setPostData(post);\r\n      else fetchPost();\r\n    }\r\n    return destroyerFunction;\r\n  }, [id, posts]);\r\n\r\n  return (\r\n    <>\r\n      {postData && !user.isLoading && (\r\n        <Post\r\n          enableLink={false}\r\n          showAuthor={false}\r\n          allUsers={allUsers.usersMap}\r\n          className=\"cac_home_post\"\r\n          data={postData}\r\n          from=\"editorial\"\r\n          cropContent={false}\r\n          showCommentaries={true}\r\n          user={user}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditorialPost;\r\n"],"sourceRoot":""}