{"version":3,"sources":["Views/editorial/index.js"],"names":["Editorial","Fallback","posts","useContext","PostsContext","user","UserContext","allUsers","AllUsersContext","history","useHistory","useEffect","fetch","editorial","className","isLoading","length","map","postData","i","key","showAuthor","data","usersMap","cropContent","onClick","id","push","showCommentaries","from"],"mappings":"6HAAA,iEAqDeA,UAtCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAQC,qBAAWC,KACnBC,EAAOF,qBAAWG,KAClBC,EAAWJ,qBAAWK,KACtBC,EAAUC,cAEhBC,qBAAU,WACRT,EAAMU,MAAMC,cACX,CAACX,EAAMU,QAKV,OACE,yBAAKE,UAAU,kBACXT,EAAKU,WAAab,EAAMA,MAAMW,UAAUG,OAAS,EACjDd,EAAMA,MAAMW,UAAUI,KAAI,SAACC,EAAUC,GACnC,OACE,kBAAC,IAAD,CACEd,KAAMA,EACNe,IAAKD,EACLE,YAAY,EACZC,KAAMJ,EACNX,SAAUA,EAASgB,SACnBC,aAAa,EACbC,QAAS,kBAfGC,EAemBR,EAASQ,QAdlDjB,EAAQkB,KAAR,qBAA2BD,IADL,IAAAA,GAgBZE,kBAAkB,EAClBC,KAAK,iBAKX,kBAAC5B,EAAD","file":"static/js/14.a95eddb7.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\n\r\nimport {\r\n  // eslint-disable-next-line no-unused-vars\r\n  BrowserRouter as Router,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport { PostsContext } from \"../../Providers/postsProvider\";\r\nimport { UserContext, AllUsersContext } from \"../../Providers/userProvider\";\r\n\r\nimport Post from \"../../Components/post\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst Editorial = ({ Fallback }) => {\r\n  const posts = useContext(PostsContext);\r\n  const user = useContext(UserContext);\r\n  const allUsers = useContext(AllUsersContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    posts.fetch.editorial();\r\n  }, [posts.fetch]);\r\n\r\n  const handlePostClick = id => {\r\n    history.push(`/editorial/${id}`);\r\n  };\r\n  return (\r\n    <div className=\"cac_editorial\">\r\n      {!user.isLoading && posts.posts.editorial.length > 0 ? (\r\n        posts.posts.editorial.map((postData, i) => {\r\n          return (\r\n            <Post\r\n              user={user}\r\n              key={i}\r\n              showAuthor={false}\r\n              data={postData}\r\n              allUsers={allUsers.usersMap}\r\n              cropContent={true}\r\n              onClick={() => handlePostClick(postData.id)}\r\n              showCommentaries={false}\r\n              from=\"editorial\"\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <Fallback />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editorial;\r\n"],"sourceRoot":""}