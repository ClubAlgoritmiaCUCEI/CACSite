{"version":3,"sources":["Components/single-post/index.js"],"names":["SinglePostView","match","from","Fallback","showAuthor","id","params","posts","useContext","PostsContext","user","UserContext","allUsers","AllUsersContext","useState","undefined","postData","setPostData","useEffect","fetchPost","a","async","postsRef","firestore","doc","get","snap","data","console","error","status","editorial","post","find","p","isLoading","enableLink","usersMap","cropContent","showCommentaries"],"mappings":"8LAwDeA,UA/CQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAmC,IAAzBC,kBAAyB,SAChEC,EAAOJ,EAAMK,OAAbD,GACFE,EAAQC,qBAAWC,KACnBC,EAAOF,qBAAWG,KAClBC,EAAWJ,qBAAWK,KAJ4C,EAKxCC,wBAASC,GAL+B,mBAKjEC,EALiE,KAKvDC,EALuD,KA6BxE,OArBAC,qBAAU,WACR,IAAMC,EAAY,4BAAAC,EAAAC,OAAA,uDACVC,EAAWC,IAAUC,IAAV,qBAA4BnB,IAD7B,oBAAAe,EAAA,MAGKE,EAASG,OAHd,OAGRC,EAHQ,OAIdT,EAAY,aAAEZ,GAAIqB,EAAKrB,IAAOqB,EAAKC,SAJrB,gDAMdC,QAAQC,MAAR,MANc,yDASlB,GAAItB,EAAMuB,OAAOC,UAAW,CAC1B,IAAMC,EAAOzB,EAAMA,MAAMwB,UAAUE,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAClD2B,EACFf,EAAYe,GAETb,SAELA,MAED,CAACd,EAAIE,EAAOL,IAGb,oCACIQ,EAAKyB,WAAcvB,EAASuB,YAAanB,EAWvC,kBAACb,EAAD,MAVF,kBAAC,IAAD,CACEiC,YAAY,EACZhC,WAAYA,EACZQ,SAAUA,EAASyB,SACnBV,KAAMX,EACNd,KAAMA,EACNoC,aAAa,EACbC,kBAAkB,EAClB7B,KAAMA","file":"static/js/4.ee4a63ad.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { firestore } from \"../../firebase\";\r\n\r\nimport { PostsContext } from \"../../Providers/postsProvider\";\r\nimport { UserContext, AllUsersContext } from \"../../Providers/userProvider\";\r\n\r\nimport Post from \"../post\";\r\n\r\nconst SinglePostView = ({ match, from, Fallback, showAuthor = false }) => {\r\n  const { id } = match.params;\r\n  const posts = useContext(PostsContext);\r\n  const user = useContext(UserContext);\r\n  const allUsers = useContext(AllUsersContext);\r\n  const [postData, setPostData] = useState(undefined);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const postsRef = firestore.doc(`test-posts/${id}`);\r\n      try {\r\n        const snap = await postsRef.get();\r\n        setPostData({ id: snap.id, ...snap.data() });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    if (posts.status.editorial) {\r\n      const post = posts.posts.editorial.find(p => p.id === id);\r\n      if (post) {\r\n        setPostData(post);\r\n      }\r\n      else fetchPost();\r\n    } else {\r\n      fetchPost();\r\n    }\r\n  }, [id, posts, from]);\r\n\r\n  return (\r\n    <>\r\n      {!user.isLoading && !allUsers.isLoading && postData ? (\r\n        <Post\r\n          enableLink={false}\r\n          showAuthor={showAuthor}\r\n          allUsers={allUsers.usersMap}\r\n          data={postData}\r\n          from={from}\r\n          cropContent={false}\r\n          showCommentaries={true}\r\n          user={user}\r\n        />\r\n      ) : <Fallback />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePostView;\r\n"],"sourceRoot":""}